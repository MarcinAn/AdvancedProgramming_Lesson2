<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Über</value>
  </data>
  <data name="AMaximumOf5CopiesCanBeBorrowed" xml:space="preserve">
    <value>Es können maximal 5 Exemplare ausgeliehen werden</value>
  </data>
  <data name="Are you sure?" xml:space="preserve">
    <value>Bist du sicher?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="Back to list" xml:space="preserve">
    <value>Zurück zur Liste</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Bücher</value>
  </data>
  <data name="ClientNumber" xml:space="preserve">
    <value>Kundennummer</value>
  </data>
  <data name="Conseratory" xml:space="preserve">
    <value>Wintergarten</value>
  </data>
  <data name="Copies" xml:space="preserve">
    <value>Kopien</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="DateOfBorrow" xml:space="preserve">
    <value>Datum der Ausleihe</value>
  </data>
  <data name="DateOfReturn" xml:space="preserve">
    <value>Datum der Rückgabe</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Delete record" xml:space="preserve">
    <value>Aufzeichnung löschen</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Einzelheiten</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Endtermin</value>
  </data>
  <data name="EnterTheNumberOfCopiesMaximum5" xml:space="preserve">
    <value>Geben Sie die Anzahl der Kopien ein (maximal 5)</value>
  </data>
  <data name="Exercise" xml:space="preserve">
    <value>Übung</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Zuhause</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="Lab" xml:space="preserve">
    <value>Labor</value>
  </data>
  <data name="Learn End" xml:space="preserve">
    <value>über die Erstellung von mvc .net Core-Apps</value>
  </data>
  <data name="Learn Start" xml:space="preserve">
    <value>Lernen</value>
  </data>
  <data name="Lecture" xml:space="preserve">
    <value>Vorlesung</value>
  </data>
  <data name="Lecturer" xml:space="preserve">
    <value>Dozent</value>
  </data>
  <data name="Movie" xml:space="preserve">
    <value>Film</value>
  </data>
  <data name="Movies" xml:space="preserve">
    <value>Filme</value>
  </data>
  <data name="Please choose" xml:space="preserve">
    <value>Bitte auswählen</value>
  </data>
  <data name="PleaseEnterACustomerNumber" xml:space="preserve">
    <value>Bitte geben Sie eine Kundennummer ein</value>
  </data>
  <data name="PleaseEnterADate" xml:space="preserve">
    <value>Bitte geben Sie ein Datum ein</value>
  </data>
  <data name="PleaseEnterFirstAndLastName" xml:space="preserve">
    <value>Bitte Vor-und Nachnamen eintragen</value>
  </data>
  <data name="PleaseEnterTheAuthor" xml:space="preserve">
    <value>Bitte geben Sie den Autor ein</value>
  </data>
  <data name="PleaseEnterTheBorrowDate" xml:space="preserve">
    <value>Bitte geben Sie das Ausleihdatum ein</value>
  </data>
  <data name="PleaseEnterTheNameOfTheSubject" xml:space="preserve">
    <value>Bitte geben Sie den Namen des Betreffs ein</value>
  </data>
  <data name="PleaseEnterTheReturnDate" xml:space="preserve">
    <value>Bitte geben Sie das Rückgabedatum ein</value>
  </data>
  <data name="PleaseInsertEmailAddress" xml:space="preserve">
    <value>Bitte E-Mail-Adresse einfügen</value>
  </data>
  <data name="PleaseInsertPhoneNumber" xml:space="preserve">
    <value>Bitte Telefonnummer einfügen</value>
  </data>
  <data name="PleaseInsertTitle" xml:space="preserve">
    <value>Bitte Titel einfügen</value>
  </data>
  <data name="PleaseSelectTheTypeOfSubject" xml:space="preserve">
    <value>Bitte wählen Sie die Art des Themas</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Preis</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privatsphäre</value>
  </data>
  <data name="Privacy Policy" xml:space="preserve">
    <value>Datenschutz-Bestimmungen</value>
  </data>
  <data name="Privacy Policy Content" xml:space="preserve">
    <value>Das ist ein Geheimnis</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Bewertung</value>
  </data>
  <data name="Record details" xml:space="preserve">
    <value>Datensatzdetails</value>
  </data>
  <data name="Record Editing" xml:space="preserve">
    <value>Bearbeiten von Datensätzen</value>
  </data>
  <data name="ReleaseDate" xml:space="preserve">
    <value>Veröffentlichungsdatum</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Zeitplan</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Anfangsdatum</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Gegenstand</value>
  </data>
  <data name="TheCustomerNumberShouldConsistOf5Digits" xml:space="preserve">
    <value>Die Kundennummer sollte aus 5 Ziffern bestehen</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="TypeOfSubject" xml:space="preserve">
    <value>Fachrichtung</value>
  </data>
</root>